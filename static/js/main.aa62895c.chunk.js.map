{"version":3,"sources":["Square.js","Board.js","App.js","index.js"],"names":["Square","props","className","winnerClass","onClick","value","Board","row","col","board","cellCounter","i","columns","j","push","this","renderSquare","key","winnerSquares","squares","createBoard","React","Component","calculateWinner","lines","length","a","b","c","winner","winnerRow","initialState","history","Array","fill","currentStepNumber","xIsNext","Game","state","move","slice","setState","concat","currentLocation","0","1","2","3","4","5","6","7","8","stepNumber","step","reverse","status","current","moves","map","desc","classButton","jumpTo","handleClick","sortMoves","reset","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.aa62895c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Square = props => (\r\n  <button className={`${props.winnerClass} square`} onClick={props.onClick}>\r\n    {props.value}\r\n  </button>\r\n);\r\n\r\nexport default Square;\r\n","import React from 'react';\r\nimport Square from './Square';\r\n\r\nclass Board extends React.Component {\r\n  createBoard(row, col) {\r\n    const board = [];\r\n    let cellCounter = 0;\r\n\r\n    for (let i = 0; i < row; i += 1) {\r\n      const columns = [];\r\n      for (let j = 0; j < col; j += 1) {\r\n        columns.push(this.renderSquare(cellCounter++));\r\n      }\r\n      board.push(<div key={i} className=\"board-row\">{columns}</div>);\r\n    }\r\n\r\n    return board;\r\n  }\r\n\r\n  renderSquare(i) {\r\n    const winnerClass =\r\n      this.props.winnerSquares &&\r\n      (this.props.winnerSquares[0] === i ||\r\n        this.props.winnerSquares[1] === i ||\r\n        this.props.winnerSquares[2] === i)\r\n        ? 'square--green'\r\n        : '';\r\n\r\n    return (\r\n      <Square\r\n        winnerClass={winnerClass}\r\n        key={i}\r\n        value={this.props.squares[i]}\r\n        onClick={() => this.props.onClick(i)}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return <div>{this.createBoard(3, 3)}</div>;\r\n  }\r\n}\r\n\r\nexport default Board;\r\n","import React from 'react';\nimport Board from './Board';\n\nconst calculateWinner = (squares) => {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  for (let i = 0; i < lines.length; i += 1) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return { winner: squares[a], winnerRow: lines[i] };\n    }\n  }\n\n  return { winner: null, winnerRow: null };\n};\n\nconst getLocation = (move) => {\n  const locationMap = {\n    0: 'row: 1, col: 1',\n    1: 'row: 1, col: 2',\n    2: 'row: 1, col: 3',\n    3: 'row: 2, col: 1',\n    4: 'row: 2, col: 2',\n    5: 'row: 2, col: 3',\n    6: 'row: 3, col: 1',\n    7: 'row: 3, col: 2',\n    8: 'row: 3, col: 3',\n  };\n\n  return locationMap[move];\n};\n\nconst initialState = {\n  history: [\n    {\n      squares: Array(9).fill(null),\n    },\n  ],\n  currentStepNumber: 0,\n  xIsNext: true,\n};\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.currentStepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares).winner || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([\n        {\n          squares,\n          currentLocation: getLocation(i),\n          stepNumber: history.length,\n        },\n      ]),\n      xIsNext: !this.state.xIsNext,\n      currentStepNumber: history.length,\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      currentStepNumber: step,\n      xIsNext: step % 2 === 0,\n    });\n  }\n\n  sortMoves() {\n    this.setState({\n      history: this.state.history.reverse(),\n    });\n  }\n\n  reset() {\n    this.setState(initialState);\n  }\n\n  render() {\n    const { history } = this.state;\n    const current = history[this.state.currentStepNumber];\n    const { winner, winnerRow } = calculateWinner(current.squares);\n\n    const moves = history.map((step, move) => {\n      const currentLocation = step.currentLocation ? `(${step.currentLocation})` : '';\n      const desc = step.stepNumber ? `Go to move #${step.stepNumber}` : 'Go to game start';\n      const classButton = move === this.state.currentStepNumber ? 'button--green' : '';\n\n      return (\n        <li key={move}>\n          <button className={`${classButton} button`} onClick={() => this.jumpTo(move)}>\n            {`${desc} ${currentLocation}`}\n          </button>\n        </li>\n      );\n    });\n\n    let status;\n    if (winner) {\n      status = `Winner ${winner}`;\n    } else if (history.length === 10) {\n      status = 'Draw. No one won.';\n    } else {\n      status = `Next player: ${this.state.xIsNext ? 'X' : 'O'}`;\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            winnerSquares={winnerRow}\n            onClick={i => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <button className=\"button\" onClick={() => this.sortMoves()}>\n            Sort moves\n          </button>\n          <button className=\"button button--new-game\" onClick={() => this.reset()}>\n            New game\n          </button>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}